{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Login from '@/views/login';\nimport Layout from '@/views/layout';\nimport Dashboard from '@/views/dashboard';\nimport Article from '@/views/article';\nimport store from '@/store';\nVue.use(VueRouter);\nconst router = new VueRouter({\n  routes: [{\n    path: '/login',\n    component: Login\n  }, {\n    path: '/',\n    component: Layout,\n    redirect: '/dashboard',\n    // 配嵌套子路由\n    // (1) 完整路径写法 /dashboard\n    // (2) 相对路径写法 dashboard 会自动拼接上前面的父路由路径\n    children: [{\n      path: 'dashboard',\n      component: Dashboard\n    }, {\n      path: 'article',\n      component: Article\n    }]\n  }]\n});\n\n// 白名单，定义成登录\nconst whiteList = ['/login'];\n\n// 路由导航守卫\nrouter.beforeEach((to, from, next) => {\n  // 1. 看有没有 token (vuex)，如果有，直接放行\n  const token = store.state.user.token;\n  if (token) {\n    next();\n    return;\n  }\n\n  // 2. 看是否在 白名单，如果在，直接放行\n  if (whiteList.includes(to.path)) {\n    next();\n    return;\n  }\n\n  // 3. 其他情况，拦截到登录\n  next('/login');\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Login","Layout","Dashboard","Article","store","use","router","routes","path","component","redirect","children","whiteList","beforeEach","to","from","next","token","state","user","includes"],"sources":["/Users/bufferhh/Desktop/hm-element-pc/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Login from '@/views/login'\r\nimport Layout from '@/views/layout'\r\nimport Dashboard from '@/views/dashboard'\r\nimport Article from '@/views/article'\r\nimport store from '@/store'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst router = new VueRouter({\r\n  routes: [\r\n    { path: '/login', component: Login },\r\n    {\r\n      path: '/',\r\n      component: Layout,\r\n      redirect: '/dashboard',\r\n      // 配嵌套子路由\r\n      // (1) 完整路径写法 /dashboard\r\n      // (2) 相对路径写法 dashboard 会自动拼接上前面的父路由路径\r\n      children: [\r\n        { path: 'dashboard', component: Dashboard },\r\n        { path: 'article', component: Article }\r\n      ]\r\n    }\r\n  ]\r\n})\r\n\r\n// 白名单，定义成登录\r\nconst whiteList = ['/login']\r\n\r\n// 路由导航守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  // 1. 看有没有 token (vuex)，如果有，直接放行\r\n  const token = store.state.user.token\r\n  if (token) {\r\n    next()\r\n    return\r\n  }\r\n\r\n  // 2. 看是否在 白名单，如果在，直接放行\r\n  if (whiteList.includes(to.path)) {\r\n    next()\r\n    return\r\n  }\r\n\r\n  // 3. 其他情况，拦截到登录\r\n  next('/login')\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,KAAK,MAAM,SAAS;AAE3BN,GAAG,CAACO,GAAG,CAACN,SAAS,CAAC;AAElB,MAAMO,MAAM,GAAG,IAAIP,SAAS,CAAC;EAC3BQ,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAET;EAAM,CAAC,EACpC;IACEQ,IAAI,EAAE,GAAG;IACTC,SAAS,EAAER,MAAM;IACjBS,QAAQ,EAAE,YAAY;IACtB;IACA;IACA;IACAC,QAAQ,EAAE,CACR;MAAEH,IAAI,EAAE,WAAW;MAAEC,SAAS,EAAEP;IAAU,CAAC,EAC3C;MAAEM,IAAI,EAAE,SAAS;MAAEC,SAAS,EAAEN;IAAQ,CAAC;EAE3C,CAAC;AAEL,CAAC,CAAC;;AAEF;AACA,MAAMS,SAAS,GAAG,CAAC,QAAQ,CAAC;;AAE5B;AACAN,MAAM,CAACO,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,MAAMC,KAAK,GAAGb,KAAK,CAACc,KAAK,CAACC,IAAI,CAACF,KAAK;EACpC,IAAIA,KAAK,EAAE;IACTD,IAAI,CAAC,CAAC;IACN;EACF;;EAEA;EACA,IAAIJ,SAAS,CAACQ,QAAQ,CAACN,EAAE,CAACN,IAAI,CAAC,EAAE;IAC/BQ,IAAI,CAAC,CAAC;IACN;EACF;;EAEA;EACAA,IAAI,CAAC,QAAQ,CAAC;AAChB,CAAC,CAAC;AAEF,eAAeV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}